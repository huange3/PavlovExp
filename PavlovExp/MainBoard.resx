<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="introEvalLB.Text" xml:space="preserve">
    <value>You will now be asked to determine if pairs of words you see "go-together" or not. You may or may not be told if you are making the correct selection, however the program is recording your performance and the better you do the sooner the study will be over.

Click the "START" button when you're ready.</value>
  </data>
  <data name="introPTEvalLB.Text" xml:space="preserve">
    <value>Now it is time to see how well you remember the stimuli that go together. In this next stage of the experiment you will see pairs of words followed by a chance to indicate whether or not those two words "go-together". If you had just seen a pair of words that go together indicate this by selecting the "YES" button. Use the "NO" button for those pairs that you see that are not meant to go together. 

Click the "START" button to begin.</value>
  </data>
  <data name="introTrainingLB.Text" xml:space="preserve">
    <value>You are now ready for the next stage of the study. This stage is similar to the previous with one small change - the words you will see now are not real words. Your task will be to first to watch to see which nonsense words go together. Following that you will be asked to determine if pairs of words you see "go-together" or not. You may or may not be told if you are making the correct selection, however the program is recording your performance and the better you do the sooner the study will be over. 

Click the "START" button when you're ready.</value>
  </data>
  <data name="introPTLB.Text" xml:space="preserve">
    <value>Thank you for volunteering to participate in this experiment. A purpose of this experiment is to see how well people can detect when things "go-together". The experiment has several stages. The first stage is to help familiarize you with the procedure. In this first stage you will be presented with common words. It will be important to watch the screen closely during this first stage. At some points during this stage you will be asked if the two most recent words go together. To indicate if two words go together you will use the computers mouse to click the "YES" button - if the previous two words do not go together then click the "NO" button.

Click the "START" button to begin. </value>
  </data>
  <metadata name="firstStimTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="secondStimTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>144, 17</value>
  </metadata>
  <metadata name="withinPairTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>290, 17</value>
  </metadata>
  <metadata name="betweenPairTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>426, 17</value>
  </metadata>
  <metadata name="rewardTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>576, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8AHm2jAx1mnXwdYZjpHF2S7BxYkbscWJIg////AP//
        /wD///8A////AP///wD///8A////AP///wD///8AH3Ongh5xp/8ri73/NKPZ/zOf2f8nebP/HF2Vgv//
        /wD///8A////AP///wD///8A////AP///wAgeq1HH3mt/zCYxv9LyOP/R8Xn/ymdyP8otuT/LpfQ/x1j
        msn///8A////AP///wD///8A////AP///wAgf7KuL469/ziMuv8reK//QpfG/wxblf8JSoj/HJLO/zSn
        3f8daKDh////AP///wD///8A////AP///wAhhrrZMaDI/1eeyP9zvd7/gt72/1m02v8NXZH/FoC9/yWy
        8/89ruL/H3Cn1f///wD///8A////AP///wAhjsLGMqfP/3rd8v8ud6//jOD2/3jQ7f8sirj/Ho3J/ya1
        7/8gnd3/RLXl/yF9t+7///8A////AP///wAilMmaPLTa/3zZ7v9PrtT/OIG0/0CSvf8hi7z/Lqzf/zC5
        7v8hktL/H53d/0S36P8rls//Hm6kR////wD///8AJKDS5Wnd8v+C3fL/LKTK/yqq0P82qdX/Nqnc/za4
        6f8kkcv/I5DO/ySm4/9Fuuv/PKzh/x90qaz///8A////ACWt17xV0uv/nej5/3jh9v9h2Pb/UtP3/0HB
        6v8xqtv/K5/W/yaX0f8np+D/K6/p/0a25v8gerDi////AP///wAmtNslJrfd5iaz2v5+0+v/y/D7/4Td
        9f9Hxuv/Pr3p/ze15f8tptz/LKzj/yuw6f9Iuej/IoW/+f///wD///8A////AP///wAmt90ZJrfdu1jL
        5v+p4PP/ouP4/0rL8f9BxO//Or3s/zO46/8utOr/Sbzq/ySOzPv///8A////AP///wD///8A////AP//
        /wAmt91TOb/g/4rW6/+26vr/Vs7x/0LD7v8rr+n/N7Do/0O46P8ggrbY////AP///wD///8A////AP//
        /wD///8A////ACa33SUmttv3bc/p/7zq+P+56fn/cczw/0Gz6v8wmNT/IH+yf////wD///8A////AP//
        /wD///8A////AP///wD///8A////ACa33Zkms9riJq/X8SWt1f01tuL/IY/G/iyNxv8gfK2z////AP//
        /wD///8A////AP///wD///8A////AP///wD///8AJrLaFSay2Coms9oQJbLYgzK04P9Etev/IYO3+///
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAms9q0Ja3V+yKV
        yK////8A/gcAAPwHAADwBwAA4AcAAMAHAACABwAAAAMAAAADAAAAAwAAAAMAAMADAADwAwAA+AMAAP4B
        AAD/AQAA//EAAA==
</value>
  </data>
</root>